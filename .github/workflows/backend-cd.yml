name: Backend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Upgrade pip and install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv --python $(which python3.10)
          pipenv install --dev

      - name: Run flake8 lint
        run: |
          cd starter/backend
          pipenv run flake8 .

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Upgrade pip and install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install dependencies
        run: |
          cd starter/backend
          pipenv --python $(which python3.10)
          pipenv install --dev

      - name: Run tests
        run: |
          cd starter/backend
          pipenv run pytest

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          cd starter/backend
          docker build --tag backend:latest .
          
  push-ecr:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 065490823891.dkr.ecr.us-east-1.amazonaws.com
      - name: Docker build front end
        run: |
          cd starter/backend
          docker build -t backend .
      - name: Tag Docker image
        run: |
          docker tag backend:latest 065490823891.dkr.ecr.us-east-1.amazonaws.com/backend:latest
      - name: Push Docker image to Amazon ECR
        run: |
          docker push 065490823891.dkr.ecr.us-east-1.amazonaws.com/backend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [push-ecr]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          mv kustomize /usr/local/bin/
      - name: Deploy to EKS
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=065490823891.dkr.ecr.us-east-1.amazonaws.com/backend:latest
          kustomize build | kubectl apply -f - --validate=false
